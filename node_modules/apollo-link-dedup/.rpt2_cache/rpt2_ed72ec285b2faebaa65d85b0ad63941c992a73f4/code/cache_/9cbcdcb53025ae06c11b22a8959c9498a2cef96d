{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ApolloLink, Observable, } from 'apollo-link';\r\nvar DedupLink = (function (_super) {\r\n    tslib_1.__extends(DedupLink, _super);\r\n    function DedupLink() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.inFlightRequestObservables = new Map();\r\n        _this.subscribers = new Map();\r\n        return _this;\r\n    }\r\n    DedupLink.prototype.request = function (operation, forward) {\r\n        var _this = this;\r\n        if (operation.getContext().forceFetch) {\r\n            return forward(operation);\r\n        }\r\n        var key = operation.toKey();\r\n        var cleanup = function (operationKey) {\r\n            _this.inFlightRequestObservables.delete(operationKey);\r\n            var prev = _this.subscribers.get(operationKey);\r\n            return prev;\r\n        };\r\n        if (!this.inFlightRequestObservables.get(key)) {\r\n            var singleObserver_1 = forward(operation);\r\n            var subscription_1;\r\n            var sharedObserver = new Observable(function (observer) {\r\n                var prev = _this.subscribers.get(key);\r\n                if (!prev)\r\n                    prev = { next: [], error: [], complete: [] };\r\n                _this.subscribers.set(key, {\r\n                    next: prev.next.concat([observer.next.bind(observer)]),\r\n                    error: prev.error.concat([observer.error.bind(observer)]),\r\n                    complete: prev.complete.concat([observer.complete.bind(observer)]),\r\n                });\r\n                if (!subscription_1) {\r\n                    subscription_1 = singleObserver_1.subscribe({\r\n                        next: function (result) {\r\n                            var previous = cleanup(key);\r\n                            _this.subscribers.delete(key);\r\n                            if (previous) {\r\n                                previous.next.forEach(function (next) { return next(result); });\r\n                                previous.complete.forEach(function (complete) { return complete(); });\r\n                            }\r\n                        },\r\n                        error: function (error) {\r\n                            var previous = cleanup(key);\r\n                            _this.subscribers.delete(key);\r\n                            if (previous)\r\n                                previous.error.forEach(function (err) { return err(error); });\r\n                        },\r\n                    });\r\n                }\r\n                return function () {\r\n                    if (subscription_1)\r\n                        subscription_1.unsubscribe();\r\n                    _this.inFlightRequestObservables.delete(key);\r\n                };\r\n            });\r\n            this.inFlightRequestObservables.set(key, sharedObserver);\r\n        }\r\n        return this.inFlightRequestObservables.get(key);\r\n    };\r\n    return DedupLink;\r\n}(ApolloLink));\r\nexport { DedupLink };\r\n//# sourceMappingURL=dedupLink.js.map","map":"{\"version\":3,\"file\":\"dedupLink.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/dedupLink.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-dedup/dedupLink.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"dedupLink.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/dedupLink.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACL,UAAU,EACV,SAAS,EACT,QAAQ,EACR,WAAW,EACX,UAAU,EACX,MAAM,aAAa,CAAC;AAKrB,qBAAa,SAAU,SAAQ,UAAU;IACvC,OAAO,CAAC,0BAA0B,CAGpB;IACd,OAAO,CAAC,WAAW,CAA+B;IAE3C,OAAO,CACZ,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,QAAQ,GAChB,UAAU,CAAC,WAAW,CAAC;CA8D3B\"}"},"dts":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-dedup/dedupLink.d.ts","writeByteOrderMark":false,"text":"import { ApolloLink, Operation, NextLink, FetchResult, Observable } from 'apollo-link';\r\nexport declare class DedupLink extends ApolloLink {\r\n    private inFlightRequestObservables;\r\n    private subscribers;\r\n    request(operation: Operation, forward: NextLink): Observable<FetchResult>;\r\n}\r\n//# sourceMappingURL=dedupLink.d.ts.map"}}
