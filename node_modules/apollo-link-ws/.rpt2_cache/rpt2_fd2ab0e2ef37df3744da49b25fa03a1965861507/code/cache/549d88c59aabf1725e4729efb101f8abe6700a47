{"map":"{\"version\":3,\"file\":\"webSocketLink.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/webSocketLink.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,UAAU,EAAsC,MAAM,aAAa,CAAC;AAE7E,OAAO,EAAE,kBAAkB,EAAiB,MAAM,4BAA4B,CAAC;AA2B/E;IAAmC,yCAAU;IAG3C,uBACE,cAAgE;QADlE,YAGE,iBAAO,SAWR;QATC,IAAI,cAAc,YAAY,kBAAkB,EAAE;YAChD,KAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC;SAC1C;aAAM;YACL,KAAI,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,CAC9C,cAAc,CAAC,GAAG,EAClB,cAAc,CAAC,OAAO,EACtB,cAAc,CAAC,aAAa,CAC7B,CAAC;SACH;;IACH,CAAC;IAEM,+BAAO,GAAd,UAAe,SAAoB;QACjC,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAE/C,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC,AAxBD,CAAmC,UAAU,GAwB5C\"}","code":"import * as tslib_1 from \"tslib\";\r\nimport { ApolloLink } from 'apollo-link';\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nvar WebSocketLink = (function (_super) {\r\n    tslib_1.__extends(WebSocketLink, _super);\r\n    function WebSocketLink(paramsOrClient) {\r\n        var _this = _super.call(this) || this;\r\n        if (paramsOrClient instanceof SubscriptionClient) {\r\n            _this.subscriptionClient = paramsOrClient;\r\n        }\r\n        else {\r\n            _this.subscriptionClient = new SubscriptionClient(paramsOrClient.uri, paramsOrClient.options, paramsOrClient.webSocketImpl);\r\n        }\r\n        return _this;\r\n    }\r\n    WebSocketLink.prototype.request = function (operation) {\r\n        return this.subscriptionClient.request(operation);\r\n    };\r\n    return WebSocketLink;\r\n}(ApolloLink));\r\nexport { WebSocketLink };\r\n//# sourceMappingURL=webSocketLink.js.map","dtsmap":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-ws/webSocketLink.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"webSocketLink.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/webSocketLink.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAE7E,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAE/E,yBAAiB,aAAa,CAAC;IAI7B,UAAiB,aAAa;QAI5B,GAAG,EAAE,MAAM,CAAC;QAKZ,OAAO,CAAC,EAAE,aAAa,CAAC;QAKxB,aAAa,CAAC,EAAE,GAAG,CAAC;KACrB;CACF;AAGD,MAAM,QAAQ,eAAe,GAAG,aAAa,CAAC,aAAa,CAAC;AAE5D,qBAAa,aAAc,SAAQ,UAAU;IAC3C,OAAO,CAAC,kBAAkB,CAAqB;gBAG7C,cAAc,EAAE,aAAa,CAAC,aAAa,GAAG,kBAAkB;IAe3D,OAAO,CAAC,SAAS,EAAE,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI;CAKrE\"}"},"dts":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-ws/webSocketLink.d.ts","writeByteOrderMark":false,"text":"import { ApolloLink, Operation, FetchResult, Observable } from 'apollo-link';\r\nimport { SubscriptionClient, ClientOptions } from 'subscriptions-transport-ws';\r\nexport declare namespace WebSocketLink {\r\n    interface Configuration {\r\n        uri: string;\r\n        options?: ClientOptions;\r\n        webSocketImpl?: any;\r\n    }\r\n}\r\nexport import WebSocketParams = WebSocketLink.Configuration;\r\nexport declare class WebSocketLink extends ApolloLink {\r\n    private subscriptionClient;\r\n    constructor(paramsOrClient: WebSocketLink.Configuration | SubscriptionClient);\r\n    request(operation: Operation): Observable<FetchResult> | null;\r\n}\r\n//# sourceMappingURL=webSocketLink.d.ts.map"}}
